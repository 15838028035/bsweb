<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd
					  	http://www.springframework.org/schema/aop
					    http://www.springframework.org/schema/aop/spring-aop.xsd
					    http://www.springframework.org/schema/task
					    http://www.springframework.org/schema/task/spring-task-3.1.xsd
					    "
	default-lazy-init="false">
	
	
	<context:component-scan base-package="com.lj" />
	<task:annotation-driven/>
	      
	<aop:aspectj-autoproxy proxy-target-class="true" />  
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	
	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url.server}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${mysql.jdbc.initialSize}" />
		<property name="minIdle" value="${mysql.jdbc.minIdle}" />
		<property name="maxActive" value="${mysql.jdbc.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${mysql.jdbc.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false -->
		<property name="poolPreparedStatements" value="${mysql.jdbc.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 对泄漏的连接 自动关闭 -->
		<property name="removeAbandoned" value="${mysql.jdbc.removeAbandoned}" /><!-- 
			打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${mysql.jdbc.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${mysql.jdbc.logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="mergeStat" />
		<!-- <property name="filters" value="stat" /> -->
		<!-- 慢日志查询 缺省为3秒 修改为10秒 10000 -->
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
		<!-- DruidDataSource各自独立 ， 支持配置公用监控数据 -->
		<property name="useGlobalDataSourceStat" value="true" />
		<!-- 事务是否自动提交 -->
		<property name="defaultAutoCommit" value="${mysql.jdbc.defaultAutoCommit}" />
	</bean>
	 

	
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
	
	<bean id="sqlMapClient" class="com.lj.app.core.common.ibatis.dao.SqlMapClientFactoryBean">
	   <property name="configLocation"> 
          		 <value>classpath:sqlMapConfig.xml</value> 
        </property>  
		<property name="dataSource" ref="dataSource" />
		<property name="lobHandler" ref="lobHandler"></property>
	</bean>         
	
	<bean  id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
  		<constructor-arg><ref bean="dataSource"/></constructor-arg>
	</bean>
   		
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>        <!--启动spring注解功能 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<aop:config>
		<aop:pointcut id="baseServiceMethods"
			expression="execution(* com.lj.app.core.common.*.service.*service(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods" />
	</aop:config>
	<aop:aspectj-autoproxy />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
			<tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ" />            
			<tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ" />
		</tx:attributes>
	</tx:advice>
	
	 <bean id="springContextHolder" class="com.lj.app.core.common.util.SpringContextHolder" lazy-init="false"/>
	 
	<bean id="currentDb"
		class="com.lj.app.core.common.util.CurrentDb">
		<property name="driverClass">
			<bean class="com.lj.app.core.common.util.DataSourceConfigLoader"
				factory-method="getPropertiesConfig">
				<constructor-arg type="java.lang.Boolean">
					<value>false</value>
				</constructor-arg>
				<constructor-arg type="java.lang.String">
					<value>jdbc.driverClassName</value>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- 邮件接口 -->
	<bean id="javaMailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="${mail-server-host}" />
			<property name="username" value="${mail-server-username}" />
			<property name="password" value="${mail-server-password}" />
			<property name="port" value="${mail-server-port}" />
			
			<property name="javaMailProperties">
				<props>
					<prop key="mail.smtp.auth">true</prop>
					<prop key="mail.debug">true</prop>
					<prop key="mail.smtp.timeout">25000</prop>
				</props>
			</property>
	</bean>
	
	<!--异步线程执行器-->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
	</bean>

</beans>